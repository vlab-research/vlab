from _typeshed import Incomplete
from facebook_business.adobjects.abstractcrudobject import AbstractCrudObject as AbstractCrudObject
from facebook_business.adobjects.adaccount import AdAccount as AdAccount
from facebook_business.api import FacebookAdsApi as FacebookAdsApi
from facebook_business.exceptions import FacebookBadObjectError as FacebookBadObjectError

class AdImageMixin:
    @classmethod
    def remote_create_from_zip(cls, filename, parent_id, api: Incomplete | None = None): ...
    def get_node_path(self): ...
    def remote_create(self, batch: Incomplete | None = None, failure: Incomplete | None = None, files: Incomplete | None = None, params: Incomplete | None = None, success: Incomplete | None = None, api_version: Incomplete | None = None): ...
    def get_hash(self): ...
    def remote_read(self, batch: Incomplete | None = None, failure: Incomplete | None = None, fields: Incomplete | None = None, params: Incomplete | None = None, success: Incomplete | None = None, api_version: Incomplete | None = None) -> None: ...
