from _typeshed import Incomplete
from facebook_business.adobjects.serverside.action_source import ActionSource as ActionSource
from facebook_business.adobjects.serverside.app_data import AppData as AppData
from facebook_business.adobjects.serverside.custom_data import CustomData as CustomData
from facebook_business.adobjects.serverside.messaging_channel import MessagingChannel as MessagingChannel
from facebook_business.adobjects.serverside.user_data import UserData as UserData

class Event:
    param_types: Incomplete
    def __init__(self, event_name: Incomplete | None = None, event_time: Incomplete | None = None, event_source_url: Incomplete | None = None, opt_out: Incomplete | None = None, event_id: Incomplete | None = None, user_data: Incomplete | None = None, custom_data: Incomplete | None = None, app_data: Incomplete | None = None, data_processing_options: Incomplete | None = None, data_processing_options_country: Incomplete | None = None, data_processing_options_state: Incomplete | None = None, action_source: Incomplete | None = None, advanced_measurement_table: Incomplete | None = None, messaging_channel: Incomplete | None = None) -> None: ...
    @property
    def event_name(self): ...
    @event_name.setter
    def event_name(self, event_name) -> None: ...
    @property
    def event_time(self): ...
    @event_time.setter
    def event_time(self, event_time) -> None: ...
    @property
    def event_source_url(self): ...
    @event_source_url.setter
    def event_source_url(self, event_source_url) -> None: ...
    @property
    def opt_out(self): ...
    @opt_out.setter
    def opt_out(self, opt_out) -> None: ...
    @property
    def event_id(self): ...
    @event_id.setter
    def event_id(self, event_id) -> None: ...
    @property
    def user_data(self): ...
    @user_data.setter
    def user_data(self, user_data) -> None: ...
    @property
    def custom_data(self): ...
    @custom_data.setter
    def custom_data(self, custom_data) -> None: ...
    @property
    def app_data(self): ...
    @app_data.setter
    def app_data(self, app_data) -> None: ...
    @property
    def data_processing_options(self): ...
    @data_processing_options.setter
    def data_processing_options(self, data_processing_options) -> None: ...
    @property
    def data_processing_options_country(self): ...
    @data_processing_options_country.setter
    def data_processing_options_country(self, data_processing_options_country) -> None: ...
    @property
    def data_processing_options_state(self): ...
    @data_processing_options_state.setter
    def data_processing_options_state(self, data_processing_options_state) -> None: ...
    @property
    def action_source(self): ...
    @action_source.setter
    def action_source(self, action_source) -> None: ...
    @property
    def advanced_measurement_table(self): ...
    @advanced_measurement_table.setter
    def advanced_measurement_table(self, advanced_measurement_table) -> None: ...
    @property
    def messaging_channel(self): ...
    @messaging_channel.setter
    def messaging_channel(self, messaging_channel) -> None: ...
    def normalize(self): ...
    def validate_action_source(self, action_source) -> None: ...
    def validate_messaging_channel(self, messaging_channel) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
