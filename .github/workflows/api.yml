name: Api
on:
  push: 
    # We should always build and test on main
    # in order to validate that no changes outside of the
    # dashboard-api/ folder affect the build
    branches:
    - main
    tags:
    - 'dashboard-*'
  pull_request:
    paths:
     - "api/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Runs the Dashboard API Tests
  tests:
    name: Tests
    runs-on: ubuntu-20.04
    env:
      PG_URL: postgres://root@localhost:5433/test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: '^1.18'
      - name: Setup Database
        run: make test-db
        working-directory: ./api
      - name: Run Tests
        run: make test
        working-directory: ./api
  # Builds the Dashboard API
  build:
    runs-on: ubuntu-latest
    name: Build Image
    needs:
    - tests
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Set docker tags
        id: meta
        uses: docker/metadata-action@v4.1.1
        env:
          DOCKER_METADATA_PR_HEAD_SHA: true
        with:
          images: vlabresearch/vlab-dashboard-api
          tags: |
            type=sha,format=long,prefix=,priority=200
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/dashboard') }},priority=100
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: api/Dockerfile
          # We only push to docker on tag with `dashboard-x.x.x`
          push: ${{ startsWith(github.ref, 'refs/tags/dashboard') }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
